{"talks":[{"id":18,"title":"Registration & Breakfast","sub_title":"Enjoy a delightful breakfast with bakery and a variety of drinks, including coffees, teas and juices.","schedule_day":"saturday","schedule_time":"08:00","schedule_datetime":"September 08, 2012 08:00","description":"Enjoy a delightful breakfast with bakery and a variety of drinks, including coffees, teas and juices.","is_event":true,"created_at":"2012-07-30T15:24:15+02:00","updated_at":"2012-08-24T09:28:49+02:00","speakers":[]},{"id":5,"title":"Scott Chacon","sub_title":"Keynote: Back to First Principles","schedule_day":"saturday","schedule_time":"09:30","schedule_datetime":"September 08, 2012 09:30","description":"Nearly everything in business is changing thanks to the new availability of high speed internet to nearly everyone on the planet. Everything you know about business is probably based on knowledge that is no longer applicable. People like you have made it possible to upend nearly every business lesson learned and ingrained over the past several hundred years. At this time, with these tools and this global network available to us, we have the power and opportunity to go back to first principles and re-imagine nearly everything - from product all the way to the workplace. This talk is about the art of returning to first principles and implementing the future.","is_event":false,"created_at":"2012-07-05T17:01:20+02:00","updated_at":"2012-07-31T09:57:15+02:00","speakers":[{"id":6,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/6/thumb_5794764512_01edeba31a.jpeg","full_name":"Scott Chacon","twitter":"chacon","github":"schacon","website":"http://scottchacon.com/","info":"Scott Chacon is the CIO of GitHub. He is the author of the ProGit book by Apress (progit.org), the Git Internals Peepcode PDF aswell as the maintainer of the Git homepage (git-scm.com) and the GitCommunity Book. Scott has presented all over the world. LinuxConf.au, OSCON, RuPy, Symfony Live, Ruby Kaigi, RailsConf, RubyConf, Scotland on Rails, Euruko to drop a few names. He also does corporate training on Git allover the where. Scott is not an actor on Mad Men, and refuses to participate in Karaoke.","tagline":"Github Cofounder"}]},{"id":7,"title":"Brian Ford","sub_title":"Grand Unification Theory: Writing and Running Code","schedule_day":"saturday","schedule_time":"10:30","schedule_datetime":"September 08, 2012 10:30","description":"Whether you are using a statically typed or dynamically typed language, there is typically a rigid separation between writing code and running code. Smalltalk environments focused on running code where writing code was actually a function of the running program. However, this approach was usually implemented using a snapshot of a running process that makes sharing code and managing changes over time quite difficult. What if we could blur the separation between writing code and running code? This could empower us to use information about how our program is running in production while adding new features or maintaining existing code. What if we could combine data from test runs, a coworker's activities, and running production applications while writing code? Such a feature could enable powerful code analysis and auditing tools. This talk will take a tour of these possibilities on the Rubinius dynamic language environment.","is_event":false,"created_at":"2012-07-06T14:33:02+02:00","updated_at":"2012-07-25T09:54:36+02:00","speakers":[{"id":5,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/5/thumb_brian_ford_headshot.png","full_name":"Brian Ford","twitter":"brixen","github":"brixen","website":"http://blog.brightredglow.com","info":"Brian has been working on Rubinius since December 2006 and with Engine Yard since January 2008. He created the RubySpec project to improve the standards for high quality, compliant Ruby implementations. He hopes to see Ruby become an even more widely used language and improved to make lives of developers even better. He also enjoys whisky but will accept a good wine in a pinch.","tagline":"Rubinius Core Team, Engine Yard"}]},{"id":11,"title":"Alex Koppel","sub_title":"Uniformity ain't all bad: getting consistent behavior across your API","schedule_day":"saturday","schedule_time":"11:15","schedule_datetime":"September 08, 2012 11:15","description":"We all love API-based applications. By letting the server focus on data handling and leaving presentation to the clients, you can create remarkably flexible applications across a variety of platforms. Best of all, you can even open your app to your fellow developers. The more clients you add, though, the more varied the requests and needs of your users become, and the more important -- and difficult -- it is to keep everything consistent. In this talk, I'll review approaches you can take to easily and maintainably standardize... * What data you fetch: letting clients manage limits, filters, sorting, etc. for all their queries -- very useful when different clients have different needs, for instance mobile v. desktop. * How you present that data: allowing control over the level of response detail and other options, as well as handling response formats, exceptions, etc. in a standard way. * How you secure your data: making sure that you don't accidentally send clients data they're not allowed to view -- an additional centralized layer on top of your other security. We'll review plenty of code samples, along with advantages and disadvantages of each approach. There'll also be plenty of time for questions and ideas from the audience -- I'm eager to hear how others approach.","is_event":false,"created_at":"2012-07-06T14:40:44+02:00","updated_at":"2012-07-30T14:16:12+02:00","speakers":[{"id":19,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/19/thumb_bio_bild_3_small_2.jpg","full_name":"Alex Koppel","twitter":"arsduo","github":"arsduo","website":"http://blog.twoalex.com/","info":"Alex is Just Another Rails Developer at 6Wunderkinder and the author of the Koala Facebook gem. Before joining the Wunderkit team to make the world more productive, he helped build a leading social marketing platform, led part of a massive healthcare IT installation in California, and moonlighted as an online bookseller. An amateur cook, eager language learner, and inveterate book reader, Alex dual majored in computer science and scavenger hunts at the University of Chicago.","tagline":"6Wunderkinder, Koala, books"}]},{"id":15,"title":"Gary Bernhardt","sub_title":"Deconstructing the Framework","schedule_day":"saturday","schedule_time":"12:00","schedule_datetime":"September 08, 2012 12:00","description":"Rails gives us M, V, C, routes, and helpers. Some people add observers and concerns, among others. We've standardized on presenters. Service objects are gaining popularity. Uncle Bob wants you to add interactors, request models, response models, and entities. That's a lot of stuff! Let's step back: ideally, how do all of these things fit together? Does it make sense to have so many different components? How do different web frameworks project these onto actual components? Most importantly: how does this explain the tangled mess in Rails controllers and how we might fix it?","is_event":false,"created_at":"2012-07-10T14:46:41+02:00","updated_at":"2012-07-25T09:46:08+02:00","speakers":[{"id":9,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/9/thumb_gary_bernhardt.png","full_name":"Gary Bernhardt","twitter":"garybernhardt","github":"garybernhardt","website":"http://destroyallsoftware.com","info":"Gary Bernhardt is a creator and destroyer of software compelled to understand both sides of heated software debates: Vim and Emacs; Python and Ruby; Git and Mercurial. He runs Destroy All Software, which publishes advanced screencasts for serious developers covering Unix, Ruby, OO design, and TDD.","tagline":"Destroy All Software"}]},{"id":20,"title":"Lunch","sub_title":"With salad, sandwich, snack and dessert in a picnic style","schedule_day":"saturday","schedule_time":"12:45","schedule_datetime":"September 08, 2012 12:45","description":"With salad, sandwich, snack and dessert in a picnic style","is_event":true,"created_at":"2012-07-30T15:24:15+02:00","updated_at":"2012-07-30T16:59:38+02:00","speakers":[]},{"id":13,"title":"Anthony Eden","sub_title":"Life Beyond HTTP","schedule_day":"saturday","schedule_time":"13:45","schedule_datetime":"September 08, 2012 13:45","description":"Attention all rubyists, there is a world of protocols for you to experience beyond HTTP. In this talk I'll introduce you to some of them, including the one I'm most passionate about: DNS. I'll provide you with some examples of how to use existing libraries to talk various protocols using Ruby and maybe even get into some low-level bit slinging. We'll have a grand old time geeking out and in the end you might just find a protocol that you can fall in love with other than HTTP.","is_event":false,"created_at":"2012-07-06T14:42:54+02:00","updated_at":"2012-07-25T09:46:55+02:00","speakers":[{"id":18,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/18/thumb_new-me.square.png","full_name":"Anthony Eden","twitter":"aeden","github":"aeden","website":"http://www.anthonyeden.com/","info":"Anthony Eden is the founder of DNSimple and the perpetrator of numerous open source projects such as ActiveWarehouse and Rails SQL Views. Anthony has also contributed to a wide variety of open source projects over the past 17 years as a software developer using multiple languages including Java, Python and Ruby. Anthony currently lives near Montpellier, France.","tagline":"Programmer, Rubyist, Surfer, Father. I am DNSimple, chi.mp, PillowTalkr."}]},{"id":10,"title":"Micha\u0142 Taszycki","sub_title":"Programming Workout","schedule_day":"saturday","schedule_time":"14:30","schedule_datetime":"September 08, 2012 14:30","description":"Our tools are becoming ever more efficient... Command line tools are becoming obsolete... Programmers today don't need to touch-type... Using the mouse to copy and paste is perfectly fine... You can always look up those design patterns on the web... Your IDE can do many things for you, so why do you even need to think? Can you feel it? Can you feel that this is TRUE? Then stop being UNPROFESSIONAL and think again! In this talk, I'm going to convince you that learning seemingly obsolete skills can have huge impact on your productivity. I will show you how these skills and other seemingly unimportant factors can impact your career. I will help you find ways to improve these skills in order to become a better programmer. I will also show you tools that can facilitate this process. In other words, I will show you how programmers WORK OUT. You will either leave this talk with a strong resolution to level up, or curl up in your comfort zone with your lovely mouse and IDE.","is_event":false,"created_at":"2012-07-06T14:40:05+02:00","updated_at":"2012-07-30T14:14:42+02:00","speakers":[{"id":20,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/20/thumb_michal_taszycki_160x160.jpg","full_name":"Micha\u0142 Taszycki","twitter":"mehowte","github":"mehowte","website":"http://programmingworkout.com","info":"After leaving the corporate universe and developing a few computer games (like [Motorstorm](http://www.mobygames.com/game/ps3/motorstorm) or [Saints Row 2](http://www.mobygames.com/game/windows/saints-row-2)) for the PS3, XBOX and PC, Micha\u0142 entered the Ruby World. Today, he makes delicious software at Applicake, manages projects and trains fellow programmers during [Code Retreats](http://www.flickr.com/photos/71470546@N08/sets/72157628278787087/with/6454903049). Micha\u0142 enjoys pushing people out of their comfort zones and into new rewarding experiences. He can also talk for hours about how seemingly unrelated skills (such as running, dancing, hand balancing or juggling) can help you become a better programmer.","tagline":"Applicake, Programming Workout"}]},{"id":26,"title":"Coffee Break","sub_title":"30 minutes break","schedule_day":"saturday","schedule_time":"15:15","schedule_datetime":"September 08, 2012 15:15","description":"30 minutes break","is_event":true,"created_at":"2012-07-31T09:17:47+02:00","updated_at":"2012-07-31T09:17:47+02:00","speakers":[]},{"id":6,"title":"Elise Huard","sub_title":"Tracing your way through ruby","schedule_day":"saturday","schedule_time":"15:45","schedule_datetime":"September 08, 2012 15:45","description":"When a ruby program gets awfully slow and you don't know why, or you have a segfault out of the blue, or your memory usage is strangely high, it's time to open other drawers of the toolbox. This talk presents an overview of the most interesting tools which allow us to have an insight in what's happening in ruby when we run a program. To name but a few: perftools.rb, dtrace, instruments, and debugging the ruby code itself. Standing on the shoulders of giant: it works.","is_event":false,"created_at":"2012-07-05T17:05:53+02:00","updated_at":"2012-07-25T09:55:27+02:00","speakers":[{"id":7,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/7/thumb_elise_huard__1_.jpeg","full_name":"Elise Huard","twitter":"elise_huard","github":"elisehuard","website":"http://jabberwocky.eu/","info":"After her studies in metallurgy, Elise realized job in that area were not her cup of tea, and she looked for jobs in an earlier interest, software. Since then, she\u2019s been rolling through jobs in C, C++, Java, a masters in AI, before falling in love with Ruby and going freelance. 12 years of software have helped her get a firm understanding on what works. She\u2019s a jack of all trades, loves reading, tinkering, food, travel, learning, and people out of the ordinary.","tagline":"Concurrency and low-level master"}]},{"id":2,"title":"Paolo Perrotta","sub_title":"The Three Laws of Bullshit: Why We Fight Over Technology","schedule_day":"saturday","schedule_time":"16:30","schedule_datetime":"September 08, 2012 16:30","description":"The Ruby community likes to try out new technologies. We also like to argue over which technology is best, and which one is the way to the future. However, the history of programming teaches us an important lesson: there is no \"best\" technology, nor a single path into the future. In fact, most technical statements that we fight over are bullshit. I'll provide plenty of examples, and a precise definition of what \"bullshit\" means.","is_event":false,"created_at":"2012-07-05T17:00:01+02:00","updated_at":"2012-07-25T09:57:14+02:00","speakers":[{"id":11,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/11/thumb_a284d850ada0874f40b35210.L._V207727863_SL200_.jpeg","full_name":"Paolo Perrotta","twitter":"nusco","github":"nusco","website":"http://ducktypo.blogspot.com/","info":"Paolo Perrotta wrote the \"Metaprogramming Ruby\" for the Pragmatic Bookshelf. He has more than ten years of experience as a developer and writer, working for domains ranging from embedded to enterprise software, computer games, and web applications. These days, Paolo coaches agile teams and mentors programmers throughout Europe. He lives in Bologna, Italy.","tagline":"Metaprogramming Ruby"}]},{"id":21,"title":"Lightning Talks","sub_title":"One hour duration open to anyone in the place","schedule_day":"saturday","schedule_time":"17:15","schedule_datetime":"September 08, 2012 17:15","description":"One hour duration open to anyone in the place","is_event":true,"created_at":"2012-07-30T15:24:15+02:00","updated_at":"2012-07-30T17:00:25+02:00","speakers":[]},{"id":25,"title":"Party","sub_title":"A great party at the beach, sponsored by Github","schedule_day":"saturday","schedule_time":"21:00","schedule_datetime":"September 08, 2012 21:00","description":"A great party at the beach, sponsored by Github","is_event":true,"created_at":"2012-07-30T16:28:20+02:00","updated_at":"2012-08-02T09:18:02+02:00","speakers":[]},{"id":22,"title":"Registration & Breakfast","sub_title":"Recover from the party with another delightful breakfast","schedule_day":"sunday","schedule_time":"09:00","schedule_datetime":"September 09, 2012 09:00","description":"Recover from the party with another delightful breakfast","is_event":true,"created_at":"2012-07-30T15:24:15+02:00","updated_at":"2012-07-31T09:55:32+02:00","speakers":[]},{"id":9,"title":"Zed A. Shaw","sub_title":"Keynote: The Top 10 Ways To Scam The Modern American Programmer","schedule_day":"sunday","schedule_time":"10:00","schedule_datetime":"September 09, 2012 10:00","description":"Do you want to be successful in the world of startups and Information Technologies? Then come listen to Zed tell you the 10 best ways to scam, rip off, fool, and influence today's American programmer. While focusing on the American variety of coder, these tactics are sure to work on people from all over the world with only minor modifications.","is_event":false,"created_at":"2012-07-06T14:34:59+02:00","updated_at":"2012-07-31T09:57:36+02:00","speakers":[{"id":16,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/16/thumb_progmofo_tshirt_logo_2.jpg","full_name":"Zed A. Shaw","twitter":"zedshaw","github":"zedshaw","website":"http://zedshaw.com/","info":"Zed A. Shaw is the creator of the greatest software development methodology ever: Programming, Motherfucker. He also writes books that teach people to code, including \"Learn Python The Hard Way\", \"Learn Ruby The Hard Way\", and soon to be released \"Learn C The Hard Way\". He plays a lot of guitar, and builds them too.","tagline":"Mongrel, Learn Code The Hard Way"}]},{"id":4,"title":"Tammer Saleh & Randall Thomas","sub_title":"RubyMotion for Faster Client/Server Development","schedule_day":"sunday","schedule_time":"11:00","schedule_datetime":"September 09, 2012 11:00","description":"The founders of Thunderbolt Labs will take you through the process of writing a RubyMotion iOS application that interfaces seamlessly with a backend Rails API. They'll explore all of the modern iOS techniques through RubyMotion, while using Storyboards, Bundler, and pulling data from a JSON API. In the process, they'll discuss the merits and pitfalls of using RubyMotion, and when it is and isn't appropriate for your project.","is_event":false,"created_at":"2012-07-05T17:00:55+02:00","updated_at":"2012-07-25T09:56:00+02:00","speakers":[{"id":14,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/14/thumb_tsaleh.jpeg","full_name":"Tammer Saleh","twitter":"tsaleh","github":"tsaleh","website":"http://thunderboltlabs.com/","info":"Tammer Saleh, founder of Thunderbolt Labs, is a long time Rubyist, leader, and published author. As VP Enginnering at Engine Yard, Tammer ran the development team and the flagship Cloud product. He authored the acclaimed book, Rails AntiPatterns with Chad Pytel. He\u2019s also the author of the Shoulda testing framework, and the fantastic Airbrake service. Tammer has given classroom training in Ruby, Rails, JRuby, and Test Driven Development, and has speak at various Ruby and Rails conferences around the world.","tagline":"Rails Antipatterns, Thunderbolt Labs"},{"id":15,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/15/thumb_rthomas.jpeg","full_name":"Randall Thomas","twitter":"daksis","github":"daksis","website":"http://thunderboltlabs.com/","info":"Founder of Thunderbolt Labs, is a classically trained musician that took one too many calculus classes along the way and got sucked into the sciences. Being both blessed and cursed with a strange form of technology ADD, he\u2019s worked in various industries with numerous startups covering everything from robotics, to low level telecommunications & networking to applied computing for stock trading systems. Randall is an internationally renowned speaker on practical data mining techniques and the business of startups.","tagline":"Rails Antipatterns, Thunderbolt Labs"}]},{"id":14,"title":"Xavier Noria","sub_title":"Constant Autoloading in Ruby on Rails","schedule_day":"sunday","schedule_time":"11:45","schedule_datetime":"September 09, 2012 11:45","description":"Ruby on Rails lets users largely forget about explicit requires. Active Support provides constant autoloading to Ruby on Rails applications, and leverages this feature to also offer automatic code reloading in development mode. In this talk we study how these nifty hacks work under the hood.","is_event":false,"created_at":"2012-07-09T14:35:31+02:00","updated_at":"2012-07-25T09:45:19+02:00","speakers":[{"id":12,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/12/thumb_august_2011_avatar.png","full_name":"Xavier Noria","twitter":"fxn","github":"fxn","website":"http://hashref.com/","info":"Xavier Noria is an independent Ruby on Rails consultant from Barcelona. Xavier is the author of Rails Contributors and a Rails core team member. Honored to have been presented a Ruby Hero Award at RailsConf 2010.","tagline":"Rails Core Team, Docrails"}]},{"id":8,"title":"Konstantin Haase","sub_title":"Message in a bottle","schedule_day":"sunday","schedule_time":"12:30","schedule_datetime":"September 09, 2012 12:30","description":"What does really happen when we call a method? How do the different Ruby implementations actually figure out what code to execute? What plumbing is going on under the hood to get a speedy dispatch? In this talk we will have a look at the internals of the the major Ruby implementations, focusing on their dispatch. From look-up tables and call site caches, to inlining and what on earth is invokedynamic? Fear not, all will be explained!","is_event":false,"created_at":"2012-07-06T14:34:16+02:00","updated_at":"2012-07-25T09:52:50+02:00","speakers":[{"id":13,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/13/thumb_berlin.png","full_name":"Konstantin Haase","twitter":"konstantinhaase","github":"rkh","website":"http://rkh.im/","info":"As current maintainer of Sinatra, Konstantin is an Open Source developer by heart. Ruby has become his language of choice since 2005. He regularly contributes to different widespread projects, like Rubinius, Rack, Travis, Rails and MRI.","tagline":"Sinatra, Rack, Rubinius"}]},{"id":24,"title":"Lunch","sub_title":"With salad, sandwich, snack and dessert in a picnic style","schedule_day":"sunday","schedule_time":"13:15","schedule_datetime":"September 09, 2012 13:15","description":"With salad, sandwich, snack and dessert in a picnic style","is_event":true,"created_at":"2012-07-30T15:24:15+02:00","updated_at":"2012-07-30T16:59:17+02:00","speakers":[]},{"id":12,"title":"Fred George","sub_title":"Micro-Service Architecture","schedule_day":"sunday","schedule_time":"14:15","schedule_datetime":"September 09, 2012 14:15","description":"SOA, service-oriented architectures, burst on the scene in the new millennium as the latest technology to support application growth. In concert with the Web, SOA ushered in new paradigms for structuring enterprise applications. At the Forward Internet Group in London, we are implementing SOA in unusual ways. Rather than a few, business-related services being implemented per the original vision, we have developed systems made of myriads of very small, usually short-lived services. In this workshop, we will start by exploring the evolution of SOA implementations by the speaker. In particular, lessons learned from each implementation will be discussed, and re-application of these lessons on the next implementation. Challenges (and even failures) will be explicitly identified. We will arrive at a model of the current systems: An environment of very small services that are loosely coupled into a complex system. We explore the demise of acceptance tests in this complex environment, and the clever replacement of business metrics in their stead. Finally, we will conclude with the surprising programmer development process impacts of this architecture. Indeed, bedrock principles of Agile have been rendered unnecessary, something that equally surprised us.","is_event":false,"created_at":"2012-07-06T14:42:15+02:00","updated_at":"2012-07-25T09:47:30+02:00","speakers":[{"id":21,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/21/thumb_photo.jpg","full_name":"Fred George","twitter":"fgeorge52","github":"fredgeorge","website":"http://processpeoplepods.blogspot.com","info":"Fred George has been writing code since 1968, and claims to have used over 70 languages in that time. An early adopter languages and processes throughout his career, Fred has focused on the post-Agile process, Programmer Anarchy, lately in his development work. He is currently an independent consultant living in London.","tagline":"Still writing code after over 40 years, still surfing on the bleeding edge"}]},{"id":29,"title":"Josh Kalderimis","sub_title":"It's not how good your app is, it's how good you want it to be","schedule_day":"sunday","schedule_time":"15:00","schedule_datetime":"September 09, 2012 15:00","description":"This talk is part story, part code, and part mustache. Travis CI is a distributed continuous integration system running over 7,000 tests daily. For us to get a true insight into what is going on behind the scenes we have had to come a long way by integrating and building both tools and libraries so that Travis and its many parts are not just a black box of information. Reading logs and using NewRelic is not new, but far from enough, especially when it comes to apps which are composed of many smaller apps, like Travis. How do you track and visualize requests being processed by multiple services? How do you silence verbose logs while not losing the core of the message? And how do you aggregate, visualize and share metrics? A lot of how we track, manage, and visualize what is going on in Travis has been created as a set of internal tools and by using a range of awesome services, but core to a lot of this is ActiveSupport Notifications and Travis Instrumentation. This session will give insight to how Travis is composed and connected, as well as shedding light on how simple it can be to gain more visibility into even a complex, distributed system like Travis, as well as your applications too.","is_event":false,"created_at":"2012-08-28T09:31:24+02:00","updated_at":"2012-08-28T10:05:32+02:00","speakers":[{"id":22,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/22/thumb_josh.jpeg","full_name":"Josh Kalderimis","twitter":"j2h","github":"joshk","website":"http://travis-ci.org","info":"Josh is a top 30 Ruby on Rails contributor and has been working with the framework since 2008. He maintains a bunch of open-source Ruby projects, including multi_json, linkedin, faraday_middleware and his own completeness-fu. He's also one of Amsterdam.rb's organizers, and an integral part of the core Travis-CI team.","tagline":"Travis-CI"}]},{"id":27,"title":"Coffee Break","sub_title":"30 minutes break","schedule_day":"sunday","schedule_time":"15:45","schedule_datetime":"September 09, 2012 15:45","description":"30 minutes break","is_event":true,"created_at":"2012-07-31T09:18:16+02:00","updated_at":"2012-07-31T09:18:57+02:00","speakers":[]},{"id":3,"title":"Dirkjan Bussink","sub_title":"Rubinius - Tales from the trenches of developing a Ruby implementation","schedule_day":"sunday","schedule_time":"16:15","schedule_datetime":"September 09, 2012 16:15","description":"Programming is hard, so writing a programming language is hard too. If you think that your users are good at finding and creating weird edge cases, just wait until programmers are using your code. I'll be discussing some of the dumbest, unexpected, trickiest and weirded cases that we've encountered when implementing Rubinius. No shaming people here, some of the most interesting ones were us (ok, me) being stupid.","is_event":false,"created_at":"2012-07-05T17:00:26+02:00","updated_at":"2012-07-25T09:56:35+02:00","speakers":[{"id":8,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/8/thumb_avatar_big.jpeg","full_name":"Dirkjan Bussink","twitter":"dbussink ","github":"dbussink","website":"http://www.slideshare.net/dbussink","info":"Dirkjan Bussink spends his working days between cows in the scenic country side of the Netherlands at [Nedap](http://www.nedap.com). There he works on software and sometimes even plays with actual hardware devices. As one of his hobby's he likes tinkering with Rubinius and has been an active contributor for the last three years.","tagline":"Rubinius"}]},{"id":1,"title":"Zach Holman","sub_title":"Unsucking Your Team's Development Environment ","schedule_day":"sunday","schedule_time":"17:00","schedule_datetime":"September 09, 2012 17:00","description":"Success can bring many glamorous changes to your company: hiring more employees, getting free coffee, and giving everyone a private jet filled with cash and endangered African predatory cats. Success can lead to less-glamorous problems, though. As you grow, your team's development environment becomes really important. How long does it take to clone, set up, and boot your apps? Can your employees still be productive on an aging codebase? How can you automate CI, hooks, and other setup for new projects? Is any of this fun anymore? GitHub ran into these problems as we expanded our team tremendously over the last two years. Let's look at some of the ways we've improved our employees' development environments.","is_event":false,"created_at":"2012-07-05T16:59:34+02:00","updated_at":"2012-07-25T09:44:22+02:00","speakers":[{"id":10,"avatar":"http://assets.baruco.org/uploads/speaker/avatar/10/thumb_holman.png","full_name":"Zach Holman","twitter":"holman","github":"holman","website":"http://zachholman.com/","info":"A Ruby developer with sound fundamentals, firm grasp on the industry, and innovative development approaches are all phrases inapplicable to Zach Holman. He works at GitHub, and hacks on sparkline generators, robot music DJs, and ethically frightening FaceTime + Chatroulette mashups. He blogs, he tweets, he evades his taxes.","tagline":"Github"}]},{"id":28,"title":"Conference ends","sub_title":"That's all folks!","schedule_day":"sunday","schedule_time":"17:45","schedule_datetime":"September 09, 2012 17:45","description":"That's all folks!","is_event":true,"created_at":"2012-07-31T09:30:20+02:00","updated_at":"2012-07-31T09:30:20+02:00","speakers":[]}]}